<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!-- Defining the Colours that will be applied to the final product-->
    <Color x:Key="PrimaryBackgroundColour">White</Color>
    <Color x:Key="SecondaryBackgroundColour">LightGray</Color>
    
    <Color x:Key="PrimaryFontColour">Black</Color>
    <Color x:Key="SecondaryFontColour">DarkGray</Color>

    <Color x:Key="Testing">lightgray</Color>


    <!-- Here I'm defining the brushes that will be used to apply the theme to the window-->
    <SolidColorBrush x:Key="PrimaryFontBrush" Color="{StaticResource PrimaryFontColour}" />
    <SolidColorBrush x:Key="SecondaryFontBrush" Color="{StaticResource SecondaryFontColour}" />

    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource PrimaryBackgroundColour}" />
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackgroundColour}" />


    <!-- This is where I set the styling which is actually building the theme-->

    <!-- GridView -->
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
    </Style>
    
    <!-- Button Definitions. I may at some point add multiple types of buttons with different types of themes-->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>


    <!-- List View Theming and StackPanel -->
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
    </Style>
    <Style TargetType="StackPanel">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
    </Style>

    <!-- Themeing Labels -->
    <Style TargetType="Label">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryFontBrush}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryFontBrush}"/>
    </Style>


</ResourceDictionary>